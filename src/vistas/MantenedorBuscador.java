/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import Controlador.ProductoDao;
import Controlador.ProductoDaoImpl;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alonso
 */
public class MantenedorBuscador extends javax.swing.JFrame {

    /**
     * Creates new form MantenedorBuscador
     */
    public MantenedorBuscador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbBuscarBuscador = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtFiltroBuscador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBuscador = new javax.swing.JTable();
        btnVolverBuscador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscador");

        jLabel1.setText("Buscar por:");

        cmbBuscarBuscador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Marca" }));

        jLabel2.setText("Filtro:");

        txtFiltroBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroBuscadorKeyReleased(evt);
            }
        });

        tbBuscador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nÂ°", "Codigo", "Nombre", "Marca", "Stock", "Precio Venta"
            }
        ));
        jScrollPane1.setViewportView(tbBuscador);
        if (tbBuscador.getColumnModel().getColumnCount() > 0) {
            tbBuscador.getColumnModel().getColumn(2).setResizable(false);
        }

        btnVolverBuscador.setText("Volver");
        btnVolverBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverBuscadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBuscarBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 250, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnVolverBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBuscarBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFiltroBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolverBuscador)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverBuscadorActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnVolverBuscadorActionPerformed

    private void txtFiltroBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroBuscadorKeyReleased
        // TODO add your handling code here:
        String caracter = txtFiltroBuscador.getText();

        //Primero limpiamos el JTable por si es que existian registros previos.
        int numFilas = tbBuscador.getRowCount();

        if (numFilas >= 1) {
            DefaultTableModel tablaBuscador = (DefaultTableModel) tbBuscador.getModel();

            for (int j = 0; j < numFilas; j++) {
                //Removemos la primera fila de la tabla, desde la posicion 0 siempre.
                tablaBuscador.removeRow(0);
            }

            tbBuscador.setModel(tablaBuscador);
        }

        ProductoDao p = new ProductoDaoImpl();

        try {
            //  Hacer 2 consultas si es que esta selecionado por nombre o marca.
            //Consultamos por el index 0, osea el nombre del producto.
            if (cmbBuscarBuscador.getSelectedIndex() == 0) {
                if (caracter.equals("")) {
                    try {

                        ResultSet resp = p.FiltroNombreBuscador(caracter);

                        DefaultTableModel tablaBuscador = (DefaultTableModel) tbBuscador.getModel();
                        if (resp == null) {
                            return;
                        }

                        Object[] objeto = new Object[6];
                        DecimalFormat formateador = new DecimalFormat("###,###");

                        int contador = 1;

                        objeto[0] = contador;

                        objeto[1] = resp.getString(1);
                        objeto[2] = resp.getString(2);
                        objeto[3] = resp.getString(3);

                        int stock = resp.getInt(4);
                        String ff = formateador.format(stock);
                        objeto[4] = ff;

                        int pvent = resp.getInt(5);
                        ff = formateador.format(pvent);
                        objeto[5] = ff;

                        tablaBuscador.addRow(objeto);

                        while (resp.next()) {

                            int val = ++contador;
                            ff = formateador.format(val);
                            objeto[0] = ff;

                            objeto[1] = resp.getString(1);
                            objeto[2] = resp.getString(2);
                            objeto[3] = resp.getString(3);

                            stock = resp.getInt(4);
                            ff = formateador.format(stock);
                            objeto[4] = ff;

                            pvent = resp.getInt(5);
                            ff = formateador.format(pvent);
                            objeto[5] = ff;

                            tablaBuscador.addRow(objeto);

                        }

                        tbBuscador.setModel(tablaBuscador);

                    } catch (SQLException ex) {
                        Logger.getLogger(MantenedorReportes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    ResultSet resp = p.FiltroNombreBuscador(caracter);
                    DefaultTableModel tablaBuscador = (DefaultTableModel) tbBuscador.getModel();

                    if (resp == null) {
                        return;
                    } else {

                        Object[] objeto = new Object[6];
                        DecimalFormat formateador = new DecimalFormat("###,###");

                        int contador = 1;

                        objeto[0] = contador;

                        objeto[1] = resp.getString(1);
                        objeto[2] = resp.getString(2);
                        objeto[3] = resp.getString(3);

                        int stock = resp.getInt(4);
                        String ff = formateador.format(stock);
                        objeto[4] = ff;

                        int pvent = resp.getInt(5);
                        ff = formateador.format(pvent);
                        objeto[5] = ff;

                        tablaBuscador.addRow(objeto);

                        while (resp.next()) {

                            int val = ++contador;
                            ff = formateador.format(val);
                            objeto[0] = ff;

                            objeto[1] = resp.getString(1);
                            objeto[2] = resp.getString(2);
                            objeto[3] = resp.getString(3);

                            stock = resp.getInt(4);
                            ff = formateador.format(stock);
                            objeto[4] = ff;

                            pvent = resp.getInt(5);
                            ff = formateador.format(pvent);
                            objeto[5] = ff;

                            tablaBuscador.addRow(objeto);

                        }

                        tbBuscador.setModel(tablaBuscador);

                    }

                }
            }
            
            //Si selecciona buscar por marca, el index es 1.
            if (cmbBuscarBuscador.getSelectedIndex() == 1) {
                if (caracter.equals("")) {
                    try {

                        ResultSet resp = p.FiltroMarcaBuscador(caracter);

                        DefaultTableModel tablaBuscador = (DefaultTableModel) tbBuscador.getModel();
                        if (resp == null) {
                            return;
                        }

                        Object[] objeto = new Object[6];
                        DecimalFormat formateador = new DecimalFormat("###,###");

                        int contador = 1;

                        objeto[0] = contador;

                        objeto[1] = resp.getString(1);
                        objeto[2] = resp.getString(2);
                        objeto[3] = resp.getString(3);

                        int stock = resp.getInt(4);
                        String ff = formateador.format(stock);
                        objeto[4] = ff;

                        int pvent = resp.getInt(5);
                        ff = formateador.format(pvent);
                        objeto[5] = ff;

                        tablaBuscador.addRow(objeto);

                        while (resp.next()) {

                            int val = ++contador;
                            ff = formateador.format(val);
                            objeto[0] = ff;

                            objeto[1] = resp.getString(1);
                            objeto[2] = resp.getString(2);
                            objeto[3] = resp.getString(3);

                            stock = resp.getInt(4);
                            ff = formateador.format(stock);
                            objeto[4] = ff;

                            pvent = resp.getInt(5);
                            ff = formateador.format(pvent);
                            objeto[5] = ff;

                            tablaBuscador.addRow(objeto);

                        }

                        tbBuscador.setModel(tablaBuscador);

                    } catch (SQLException ex) {
                        Logger.getLogger(MantenedorReportes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    ResultSet resp = p.FiltroMarcaBuscador(caracter);
                    DefaultTableModel tablaBuscador = (DefaultTableModel) tbBuscador.getModel();
                    if (resp == null) {
                        return;
                    }

                    Object[] objeto = new Object[6];
                    DecimalFormat formateador = new DecimalFormat("###,###");

                    int contador = 1;

                        objeto[0] = contador;

                        objeto[1] = resp.getString(1);
                        objeto[2] = resp.getString(2);
                        objeto[3] = resp.getString(3);

                        int stock = resp.getInt(4);
                        String ff = formateador.format(stock);
                        objeto[4] = ff;

                        int pvent = resp.getInt(5);
                        ff = formateador.format(pvent);
                        objeto[5] = ff;

                        tablaBuscador.addRow(objeto);

                    while (resp.next()) {

                        int val = ++contador;
                            ff = formateador.format(val);
                            objeto[0] = ff;

                            objeto[1] = resp.getString(1);
                            objeto[2] = resp.getString(2);
                            objeto[3] = resp.getString(3);

                            stock = resp.getInt(4);
                            ff = formateador.format(stock);
                            objeto[4] = ff;

                            pvent = resp.getInt(5);
                            ff = formateador.format(pvent);
                            objeto[5] = ff;

                            tablaBuscador.addRow(objeto);

                    }

                    tbBuscador.setModel(tablaBuscador);
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(MantenedorReportes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtFiltroBuscadorKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenedorBuscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenedorBuscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenedorBuscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenedorBuscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenedorBuscador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnVolverBuscador;
    private javax.swing.JComboBox cmbBuscarBuscador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbBuscador;
    private javax.swing.JTextField txtFiltroBuscador;
    // End of variables declaration//GEN-END:variables
}
